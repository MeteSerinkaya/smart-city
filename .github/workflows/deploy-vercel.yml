name: Deploy to Vercel

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.28.5'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Enable web
        run: flutter config --enable-web

      - name: Get dependencies
        run: flutter pub get

      - name: Build web app
        run: flutter build web --release

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod'

      - name: Comment PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            const botComment = comments.find(comment => comment.user.type === 'Bot');
            
            if (botComment) {
              await github.rest.issues.updateComment({
                comment_id: botComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `ðŸš€ **Vercel Preview Deployed!**\n\nYour changes are now live on Vercel!\n\n**Preview URL:** ${process.env.VERCEL_URL}\n**Branch:** ${context.payload.pull_request.head.ref}\n\n<sub>This comment will be updated on each deployment.</sub>`
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `ðŸš€ **Vercel Preview Deployed!**\n\nYour changes are now live on Vercel!\n\n**Preview URL:** ${process.env.VERCEL_URL}\n**Branch:** ${context.payload.pull_request.head.ref}\n\n<sub>This comment will be updated on each deployment.</sub>`
              });
            }
